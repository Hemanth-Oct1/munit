name: Build, Test, and Deploy to Dev

on:
  push:
    branches: [ mai ]
  pull_request:
    branches: [ mai ]
    
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout this repo
      uses: actions/checkout@v3
    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-
    - name: Set up JDK 1.8
      uses: actions/setup-java@v3
      with:
        distribution: 'zulu'
        java-version: 8
    - name: Test with Maven
      run: mvn test --settings .maven/settings.xml -Dmule.env=dev
    - name: Upload MUnit reports
      uses: actions/upload-artifact@v3
      with:
        name: munit-test-reports
        path: target/site/munit/coverage/

  build:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout this repo
        uses: actions/checkout@v4

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven-

      - name: Set up JDK 1.8
        uses: actions/setup-java@v4
        with:
          distribution: "zulu"
          java-version: 8
      - name: Publish to Exchange
        run: |
          mvn deploy --settings .maven/settings.xml -DskipMunitTests \
          -Dclient.id="${{ secrets.CONNECTED_APP_CLIENT_ID }}" \
          -Dclient.secret="${{ secrets.CONNECTED_APP_CLIENT_SECRET }}"


  deploydev:
    needs: build
    runs-on: ubuntu-latest
    steps:    
    - name: Checkout this repo
      uses: actions/checkout@v4
    - name: Cache dependencies
      uses: actions/cache@v4
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-       
    - name: Deploy to dev
      run: |
        mvn deploy --settings .maven/settings.xml -DmuleDeploy -DskipMunitTests  \
        -Dclient.id="${{ secrets.CONNECTED_APP_CLIENT_ID }}" \
        -Dclient.secret="${{ secrets.CONNECTED_APP_CLIENT_SECRET }}" \
        -Ddecryption.key="${{ secrets.securekey }}" \
        -Dmule.env=dev \
        -Denv=dev \
        -Dappname=algolia-app-dev-ch2 \
        -Danypoint.platform.client_id="${{secrets.org_client_id}}" \
        -Danypoint.platform.client_secret="${{secrets.org_client_secret}}"
